/*
 * This file is generated by jOOQ.
 */
package de.VBKA.database.jooq.tables.records;


import de.VBKA.database.jooq.tables.Booking;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingRecord extends UpdatableRecordImpl<BookingRecord> implements Record5<Integer, String, LocalDate, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>VBKA.BOOKING.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>VBKA.BOOKING.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>VBKA.BOOKING.FK_ACCOUNT</code>.
     */
    public void setFkAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>VBKA.BOOKING.FK_ACCOUNT</code>.
     */
    public String getFkAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>VBKA.BOOKING.BOOKING_DATE</code>.
     */
    public void setBookingDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>VBKA.BOOKING.BOOKING_DATE</code>.
     */
    public LocalDate getBookingDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>VBKA.BOOKING.AMOUNT_IN_CENT</code>.
     */
    public void setAmountInCent(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>VBKA.BOOKING.AMOUNT_IN_CENT</code>.
     */
    public Integer getAmountInCent() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>VBKA.BOOKING.BOOKING_AS_STRING</code>.
     */
    public void setBookingAsString(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>VBKA.BOOKING.BOOKING_AS_STRING</code>.
     */
    public String getBookingAsString() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, LocalDate, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, LocalDate, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Booking.BOOKING.ID;
    }

    @Override
    public Field<String> field2() {
        return Booking.BOOKING.FK_ACCOUNT;
    }

    @Override
    public Field<LocalDate> field3() {
        return Booking.BOOKING.BOOKING_DATE;
    }

    @Override
    public Field<Integer> field4() {
        return Booking.BOOKING.AMOUNT_IN_CENT;
    }

    @Override
    public Field<String> field5() {
        return Booking.BOOKING.BOOKING_AS_STRING;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFkAccount();
    }

    @Override
    public LocalDate component3() {
        return getBookingDate();
    }

    @Override
    public Integer component4() {
        return getAmountInCent();
    }

    @Override
    public String component5() {
        return getBookingAsString();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFkAccount();
    }

    @Override
    public LocalDate value3() {
        return getBookingDate();
    }

    @Override
    public Integer value4() {
        return getAmountInCent();
    }

    @Override
    public String value5() {
        return getBookingAsString();
    }

    @Override
    public BookingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BookingRecord value2(String value) {
        setFkAccount(value);
        return this;
    }

    @Override
    public BookingRecord value3(LocalDate value) {
        setBookingDate(value);
        return this;
    }

    @Override
    public BookingRecord value4(Integer value) {
        setAmountInCent(value);
        return this;
    }

    @Override
    public BookingRecord value5(String value) {
        setBookingAsString(value);
        return this;
    }

    @Override
    public BookingRecord values(Integer value1, String value2, LocalDate value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookingRecord
     */
    public BookingRecord() {
        super(Booking.BOOKING);
    }

    /**
     * Create a detached, initialised BookingRecord
     */
    public BookingRecord(Integer id, String fkAccount, LocalDate bookingDate, Integer amountInCent, String bookingAsString) {
        super(Booking.BOOKING);

        setId(id);
        setFkAccount(fkAccount);
        setBookingDate(bookingDate);
        setAmountInCent(amountInCent);
        setBookingAsString(bookingAsString);
    }
}
