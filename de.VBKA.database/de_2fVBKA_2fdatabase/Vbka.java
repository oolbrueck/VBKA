/*
 * This file is generated by jOOQ.
 */
package de_2fVBKA_2fdatabase;


import de_2fVBKA_2fdatabase.tables.Account;
import de_2fVBKA_2fdatabase.tables.Booking;
import de_2fVBKA_2fdatabase.tables.BookingRCategory;
import de_2fVBKA_2fdatabase.tables.Category;
import de_2fVBKA_2fdatabase.tables.CategoryMatcher;
import de_2fVBKA_2fdatabase.tables.CategoryMatcherRCategory;
import de_2fVBKA_2fdatabase.tables.CategoryRCategory;
import de_2fVBKA_2fdatabase.tables.UserTable;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vbka extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>VBKA</code>
     */
    public static final Vbka VBKA = new Vbka();

    /**
     * The table <code>VBKA.ACCOUNT</code>.
     */
    public final Account ACCOUNT = Account.ACCOUNT;

    /**
     * The table <code>VBKA.BOOKING</code>.
     */
    public final Booking BOOKING = Booking.BOOKING;

    /**
     * The table <code>VBKA.BOOKING_R_CATEGORY</code>.
     */
    public final BookingRCategory BOOKING_R_CATEGORY = BookingRCategory.BOOKING_R_CATEGORY;

    /**
     * The table <code>VBKA.CATEGORY</code>.
     */
    public final Category CATEGORY = Category.CATEGORY;

    /**
     * The table <code>VBKA.CATEGORY_MATCHER</code>.
     */
    public final CategoryMatcher CATEGORY_MATCHER = CategoryMatcher.CATEGORY_MATCHER;

    /**
     * The table <code>VBKA.CATEGORY_MATCHER_R_CATEGORY</code>.
     */
    public final CategoryMatcherRCategory CATEGORY_MATCHER_R_CATEGORY = CategoryMatcherRCategory.CATEGORY_MATCHER_R_CATEGORY;

    /**
     * The table <code>VBKA.CATEGORY_R_CATEGORY</code>.
     */
    public final CategoryRCategory CATEGORY_R_CATEGORY = CategoryRCategory.CATEGORY_R_CATEGORY;

    /**
     * The table <code>VBKA.USER_TABLE</code>.
     */
    public final UserTable USER_TABLE = UserTable.USER_TABLE;

    /**
     * No further instances allowed
     */
    private Vbka() {
        super("VBKA", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Account.ACCOUNT,
            Booking.BOOKING,
            BookingRCategory.BOOKING_R_CATEGORY,
            Category.CATEGORY,
            CategoryMatcher.CATEGORY_MATCHER,
            CategoryMatcherRCategory.CATEGORY_MATCHER_R_CATEGORY,
            CategoryRCategory.CATEGORY_R_CATEGORY,
            UserTable.USER_TABLE
        );
    }
}
